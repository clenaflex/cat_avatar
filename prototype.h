extern double which_min(double a,double b);
extern double which_max(double a,double b);
extern void ellipse_wh_calc(int a, int b ,int theta,int width_height[2]);
extern void detect_eye_ellipse(cv::Mat& img,double eye[5]);
extern void ellipse_line_cross_calc(double p,double q,double a,double b,double x1,double y1, double x2,double y2,double ans[2]);
extern void line_cross_point(double x1,double y1,double x2,double y2,double x3,double y3,double x4,double y4,double ans[2]);
extern void ellipse_ear_calc(double p,double q,double a,double b,double lx1,double ly1,double lx2,double ly2,double lx3,double ly3,double lx4,double ly4,double rx1,double ry1,double rx2,double ry2,double rx3,double ry3,double rx4,double ry4,double ans[12]);
extern void draw_face_ellipse(cv::Mat& img,double p,double q,double a,double b,cv::Scalar bgr[3],int type);
extern void draw_ear_two_triangle(cv::Mat& img,cv::Point l_pt[3],cv::Scalar l_bgr[2],cv::Point r_pt[3],cv::Scalar r_bgr[2]);
extern void draw_eye_two_ellipse(cv::Mat& img,cv::Point pt_lo,cv::Size sz_lo,int theta_lo,cv::Point pt_li,cv::Size sz_li,int theta_li,cv::Scalar le_bgr[2],cv::Point pt_ro,cv::Size sz_ro,int theta_ro,cv::Point pt_ri,cv::Size sz_ri,int theta_ri,cv::Scalar re_bgr[2]);
extern void draw_mouth(cv::Mat& img,cv::Point pt_m,int w, int h,cv::Scalar c_m);
extern void calc_tan_two_line(double x1,double y1,double x2,double y2,double x3,double y3,double x4,double y4);
extern void detect_ear_line(cv::Mat& img,int linea[4],int lineb[4]);
extern void get_color(cv::Mat img,cv:: Point img_point,cv::Scalar color);
extern void rgb_gray(cv::Mat& img,int threshold);
extern void k_means(cv::Mat& src_img,int cluster_count);
extern int cat_classify(cv::Mat& img,cv::Point eye_r,int eye_r_wh,cv::Point eye_l,int eye_l_wh,cv::Point mouth,int mouth_wh,cv::Scalar face_color[3]);
extern void get_eye_color(cv::Mat eye_img,cv::Point ellipse_pq,int a ,int b,int theta,cv::Scalar eye_color);
extern void get_ear_color(cv::Mat ear_img,cv::Scalar ear_color);
extern void get_mouth_color(cv::Mat mouth_img,cv::Scalar mouth_color);